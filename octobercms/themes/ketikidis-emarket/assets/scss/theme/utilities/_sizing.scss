//
// Sizing Utilities
//

$sizes: () !default;
$sizes: map-merge(
  (
    1: .25rem,
    2: .5rem,
    3: .75rem,
	4: 1rem,
    5: 1.25rem,
    6: 1.5rem,
    8: 2rem,
    10: 2.5rem,
    12: 3rem,
	14: 3.5rem,
    16: 4rem,
	18: 4.5rem,
	20: 5rem,
	22: 5.5rem,
    24: 6rem,
    32: 8rem,
	40: 10rem,
    120: 30rem,
    25: 25%,
    50: 50%,
    75: 75%,
    100: 100%,
    auto: auto
  ),
  $sizes
);

@if $sizes-breakpoints {
  @each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
  
      @each $prop, $abbrev in (width: w, height: h) {
        @each $size, $length in $sizes {
          .#{$abbrev}#{$infix}-#{$size} { #{$prop}: $length !important; }
  	    }
      }
    }
  }
}
@else {
  @each $prop, $abbrev in (width: w, height: h) {
	@each $size, $length in $sizes {
	  .#{$abbrev}-#{$size} { #{$prop}: $length !important; }
	}
  }
}


// Min, max sizes
$min-max-sizes: () !default;
$min-max-sizes: map-merge(
  (
    xs: 10rem,
    sm: 20rem,
    md: 30rem,
	lg: 40rem,
    xl: 50rem
  ),
  $min-max-sizes
);

@if $min-max-sizes-breakpoints {
  @each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
  
      @each $prop, $abbrev in (max-width: max-w, max-height: max-h, min-width: min-w, min-height: min-h) {
        @each $size, $length in $min-max-sizes {
          .#{$abbrev}#{$infix}-#{$size} { #{$prop}: $length !important; }
  	    }
      }
    }
  }
}
@else {
  @each $prop, $abbrev in (max-width: max-w, max-height: max-h, min-width: min-w, min-height: min-h) {
	@each $size, $length in $min-max-sizes {
	  .#{$abbrev}-#{$size} { #{$prop}: $length !important; }
	}
  }
}